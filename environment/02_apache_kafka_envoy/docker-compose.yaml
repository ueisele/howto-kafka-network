---
version: '2.2'

networks:
  app:
    driver: bridge
  kafka:
    driver: bridge
  zookeeper:
    driver: bridge

services:

  # Client
  client:
    image: wurstmeister/kafka:${VERSION_APACHE_KAFKA}
    restart: unless-stopped
    container_name: client
    command: [tail, -f, /dev/null]
    tty: true
    networks:
      - app

  # Envoy
  envoy-kafka1:
    image: ${ENVOY_IMAGE}:${VERSION_ENVOY}
    restart: unless-stopped
    container_name: envoy-kafka1
    hostname: envoy-kafka1
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml", "--component-log-level", "kafka:trace"]
    volumes:
      - ./envoy-kafka1.yaml:/etc/envoy/envoy.yaml
    networks:
      app:
        priority: 10
        aliases:
          - envoy-kafka.${DOMAIN_PUBLIC}
          - envoy-kafka1.${DOMAIN_PUBLIC}
          - kafka.${DOMAIN_PUBLIC}
          - kafka1.${DOMAIN_PUBLIC}
      kafka:
        priority: 0
        aliases:
          - envoy-kafka.${DOMAIN_INTERN}
          - envoy-kafka1.${DOMAIN_INTERN}

  envoy-kafka2:
    image: ${ENVOY_IMAGE}:${VERSION_ENVOY}
    restart: unless-stopped
    container_name: envoy-kafka2
    hostname: envoy-kafka2
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml", "--component-log-level", "kafka:trace"]
    volumes:
      - ./envoy-kafka2.yaml:/etc/envoy/envoy.yaml
    networks:
      app:
        priority: 10
        aliases:
          - envoy-kafka.${DOMAIN_PUBLIC}
          - envoy-kafka2.${DOMAIN_PUBLIC}
          - kafka.${DOMAIN_PUBLIC}
          - kafka2.${DOMAIN_PUBLIC}
      kafka:
        priority: 0
        aliases:
          - envoy-kafka.${DOMAIN_INTERN}
          - envoy-kafka2.${DOMAIN_INTERN}

  envoy-kafka3:
    image: ${ENVOY_IMAGE}:${VERSION_ENVOY}
    restart: unless-stopped
    container_name: envoy-kafka3
    hostname: envoy-kafka3
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml", "--component-log-level", "kafka:trace"]
    volumes:
      - ./envoy-kafka3.yaml:/etc/envoy/envoy.yaml
    networks:
      app:
        priority: 10
        aliases:
          - envoy-kafka.${DOMAIN_PUBLIC}
          - envoy-kafka3.${DOMAIN_PUBLIC}
          - kafka.${DOMAIN_PUBLIC}
          - kafka3.${DOMAIN_PUBLIC}
      kafka:
        priority: 0
        aliases:
          - envoy-kafka.${DOMAIN_INTERN}
          - envoy-kafka3.${DOMAIN_INTERN}        

  # Kafka
  kafka1:
    build:
      dockerfile: Dockerfile.kafka
      context: .
      args:
        VERSION_APACHE_KAFKA: ${VERSION_APACHE_KAFKA}
    image: apache-kafka:${VERSION_APACHE_KAFKA}
    restart: unless-stopped
    container_name: kafka1
    hostname: kafka1
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1.${DOMAIN_INTERN}:2181,zookeeper2.${DOMAIN_INTERN}:2181,zookeeper3.${DOMAIN_INTERN}:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PUBLIC:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,REPLICATION:PLAINTEXT
      KAFKA_LISTENERS: PUBLIC://:9092,INTERNAL://:9093,CONTROLLER://:9094,REPLICATION://:9095
      KAFKA_ADVERTISED_LISTENERS: PUBLIC://kafka1.${DOMAIN_PUBLIC}:9092,INTERNAL://kafka1.${DOMAIN_INTERN}:9093,CONTROLLER://kafka1.${DOMAIN_INTERN}:9094,REPLICATION://kafka1.${DOMAIN_INTERN}:9095
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      JOLOKIA_DISCOVERY_HOSTNAME_COMMAND: echo $$(hostname).${DOMAIN_INTERN}
      JOLOKIA_AGENTID_COMMAND: hostname
    networks:
      kafka:
        priority: 10
        aliases:
          - kafka.${DOMAIN_INTERN}
          - kafka1.${DOMAIN_INTERN}
      zookeeper:
        priority: 0
        aliases:
          - kafka.${DOMAIN_INTERN}
          - kafka1.${DOMAIN_INTERN}

  kafka2:
    build:
      dockerfile: Dockerfile.kafka
      context: .
      args:
        VERSION_APACHE_KAFKA: ${VERSION_APACHE_KAFKA}
    image: apache-kafka:${VERSION_APACHE_KAFKA}
    restart: unless-stopped
    container_name: kafka2
    hostname: kafka2
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1.${DOMAIN_INTERN}:2181,zookeeper2.${DOMAIN_INTERN}:2181,zookeeper3.${DOMAIN_INTERN}:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PUBLIC:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,REPLICATION:PLAINTEXT
      KAFKA_LISTENERS: PUBLIC://:9092,INTERNAL://:9093,CONTROLLER://:9094,REPLICATION://:9095
      KAFKA_ADVERTISED_LISTENERS: PUBLIC://kafka2.${DOMAIN_PUBLIC}:9092,INTERNAL://kafka2.${DOMAIN_INTERN}:9093,CONTROLLER://kafka2.${DOMAIN_INTERN}:9094,REPLICATION://kafka2.${DOMAIN_INTERN}:9095
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      JOLOKIA_DISCOVERY_HOSTNAME_COMMAND: echo $$(hostname).${DOMAIN_INTERN}
      JOLOKIA_AGENTID_COMMAND: hostname
    networks:
      kafka:
        priority: 10
        aliases:
          - kafka.${DOMAIN_INTERN}
          - kafka2.${DOMAIN_INTERN}
      zookeeper:
        priority: 0
        aliases:
          - kafka.${DOMAIN_INTERN}
          - kafka2.${DOMAIN_INTERN}

  kafka3:
    build:
      dockerfile: Dockerfile.kafka
      context: .
      args:
        VERSION_APACHE_KAFKA: ${VERSION_APACHE_KAFKA}
    image: apache-kafka:${VERSION_APACHE_KAFKA}
    restart: unless-stopped
    container_name: kafka3
    hostname: kafka3
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1.${DOMAIN_INTERN}:2181,zookeeper2.${DOMAIN_INTERN}:2181,zookeeper3.${DOMAIN_INTERN}:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PUBLIC:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,REPLICATION:PLAINTEXT
      KAFKA_LISTENERS: PUBLIC://:9092,INTERNAL://:9093,CONTROLLER://:9094,REPLICATION://:9095
      KAFKA_ADVERTISED_LISTENERS: PUBLIC://kafka3.${DOMAIN_PUBLIC}:9092,INTERNAL://kafka3.${DOMAIN_INTERN}:9093,CONTROLLER://kafka3.${DOMAIN_INTERN}:9094,REPLICATION://kafka3.${DOMAIN_INTERN}:9095
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      JOLOKIA_DISCOVERY_HOSTNAME_COMMAND: echo $$(hostname).${DOMAIN_INTERN}
      JOLOKIA_AGENTID_COMMAND: hostname
    networks:
      kafka:
        priority: 10
        aliases:
          - kafka.${DOMAIN_INTERN}
          - kafka3.${DOMAIN_INTERN}
      zookeeper:
        priority: 0
        aliases:
          - kafka.${DOMAIN_INTERN}
          - kafka3.${DOMAIN_INTERN}
  
  # Zookeeper
  zookeeper1:
    image: zookeeper:${VERSION_APACHE_ZOOKEEPER}
    restart: unless-stopped
    container_name: zookeeper1
    hostname: zookeeper1
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper1.${DOMAIN_INTERN}:2888:3888;2181 server.2=zookeeper2.${DOMAIN_INTERN}:2888:3888;2181 server.3=zookeeper3.${DOMAIN_INTERN}:2888:3888;2181
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 5
      ZOO_SYNC_LIMIT: 2
    networks:
      zookeeper:
        aliases:
          - zookeeper1.${DOMAIN_INTERN}

  zookeeper2:
    image: zookeeper:${VERSION_APACHE_ZOOKEEPER}
    restart: unless-stopped
    container_name: zookeeper2
    hostname: zookeeper2
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper1.${DOMAIN_INTERN}:2888:3888;2181 server.2=zookeeper2.${DOMAIN_INTERN}:2888:3888;2181 server.3=zookeeper3.${DOMAIN_INTERN}:2888:3888;2181
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 5
      ZOO_SYNC_LIMIT: 2
    networks:
      zookeeper:
        aliases:
          - zookeeper2.${DOMAIN_INTERN}

  zookeeper3:
    image: zookeeper:${VERSION_APACHE_ZOOKEEPER}
    restart: unless-stopped
    container_name: zookeeper3
    hostname: zookeeper3
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper1.${DOMAIN_INTERN}:2888:3888;2181 server.2=zookeeper2.${DOMAIN_INTERN}:2888:3888;2181 server.3=zookeeper3.${DOMAIN_INTERN}:2888:3888;2181
      ZOO_TICK_TIME: 2000
      ZOO_INIT_LIMIT: 5
      ZOO_SYNC_LIMIT: 2
    networks:
      zookeeper:
        aliases:
          - zookeeper3.${DOMAIN_INTERN}

  # Monitoring
  hawtio:
    build:
      dockerfile: Dockerfile.hawtio
      context: .
      args:
        HAWTIO_VERSION: ${VERSION_HAWTIO}
        HAWTIO_PORT: 8081
    image: hawtio:${VERSION_HAWTIO}
    restart: unless-stopped
    container_name: hawtio
    ports:
      - 8081:8081
    networks:
      kafka:
        aliases:
          - hawtio.${DOMAIN_INTERN}